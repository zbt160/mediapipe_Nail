// Copyright 2022 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package mediapipe;

import "mediapipe/framework/calculator.proto";

message AudioToTensorCalculatorOptions {
  extend mediapipe.CalculatorOptions {
    optional AudioToTensorCalculatorOptions ext = 448635064;
  }

  // The required number of channels the output audio tensor has.
  optional int64 num_channels = 1;

  // The required number of samples per channel the output audio tensor has.
  optional int64 num_samples = 2;

  // The number of overlapping samples per channel the output audio tensor has.
  optional int64 num_overlapping_samples = 3 [default = 0];

  // The target number of samples per second (hertz) of the audio buffers that
  // will be converted into tensors.
  optional double target_sample_rate = 4;

  // Whether to treat the input audio stream as a continous stream or a batch
  // of unrelated audio buffers.
  optional bool streaming_mode = 5 [default = true];

  // Set to false to disable checks for jitter in timestamp values. Useful with
  // live audio input.
  optional bool check_inconsistent_timestamps = 6 [default = true];
}
